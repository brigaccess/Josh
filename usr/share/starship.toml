right_format = '$cmd_duration$status'
scan_timeout = 50
command_timeout = 5000
add_newline = false

[aws]
format = ' @[$symbol($profile )(\($region\) )(\[$duration\])]($style)'

[azure]
format = ' [$symbol($subscription)]($style) '

[buf]
format = ' [$symbol($version)]($style)'

[c]
format = ' [$symbol($version(-$name))]($style)'

[character]
format = '$symbol'
success_symbol = '[Î»](bold green) '
error_symbol = '[Î»](bold red) '
vicmd_symbol = '[Î»](bold blue) '
disabled = false

[cmake]
format = ' [$symbol($version)]($style)'

[cmd_duration]
min_time = 250
format = '[$duration]($style)'
style = 'blue'
show_milliseconds = true
show_notifications = true
min_time_to_notify = 0

[cobol]
format = ' [$symbol($version)]($style)'

[conda]
format = ' [$symbol$environment]($style)'

[crystal]
format = ' [$symbol($version)]($style)'

[dart]
format = ' [$symbol($version)]($style)'

[deno]
format = ' [$symbol($version)]($style)'

[directory]
truncate_to_repo = false
fish_style_pwd_dir_length = 2
format = '[$path]($style)[/](black bold)[$read_only]($read_only_style)'
style = 'white'
read_only = 'ro'
read_only_style = 'fg:white bold bg:red'
repo_root_style = 'yellow'
repo_root_format = '[$before_root_path]($style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style)[/](black bold)'

[directory.substitutions]

[docker_context]
format = ' [$symbol$context]($style)'

[dotnet]
format = ' [$symbol($version)(ðŸŽ¯ $tfm )]($style)'

[elixir]
format = ' [$symbol($version\(OTP $otp_version\) )]($style)'

[elm]
format = ' [$symbol($version)]($style)'

[erlang]
format = ' [$symbol($version)]($style)'

[gcloud]
format = ' [$symbol$account(@$domain)(\($region\))]($style)'

[git_branch]
format = '[$symbol$branch]($style)(:[$remote]($style))[/](black bold)'
symbol = ''
style = 'yellow bold'
disabled = false

[git_commit]
format = '[$hash$tag]($style)[/](black bold)'
tag_symbol = '/'
tag_disabled = false

[git_metrics]
format = '[$added]($added_style)[$deleted]($deleted_style)'
disabled = false

[git_state]
rebase = 'REBASE'
merge = 'MERGE'
revert = 'REVERT'
cherry_pick = 'PICK'
bisect = 'BISECT'
am = 'AM'
am_or_rebase = 'AM/REBASE'
style = 'bold yellow'
format = '\([$state( $progress_current/$progress_total)]($style)\)'
disabled = false

[git_status]
format = '([$all_status$ahead_behind]($style))'
style = 'fg:white bold'
stashed = ''
ahead = 'â‡¡'
behind = 'â‡£'
up_to_date = '))))'
diverged = 'â‡•'
conflicted = '='
deleted = 'âœ˜'
renamed = 'Â»'
modified = '!'
staged = '+'
untracked = '?'
ignore_submodules = false
disabled = false

[golang]
format = ' [$symbol($version)]($style)'

[haskell]
format = ' [$symbol($version )]($style)'

[helm]
format = ' [$symbol($version)]($style)'

[hg_branch]
format = ' [$symbol$branch]($style)'

[hostname]
format = '[$hostname]($style)[:](black bold)'
style = 'green'

[java]
format = ' [$symbol($version)]($style)'

[jobs]
format = ' [$symbol$number]($style)'

[julia]
format = ' [$symbol($version)]($style)'

[kotlin]
format = ' [$symbol($version)]($style)'

[line_break]
disabled = false

[lua]
format = ' [$symbol($version)]($style)'

[nim]
format = ' [$symbol($version)]($style)'

[nix_shell]
format = '[$symbol$state( \($name\))]($style) '

[nodejs]
format = ' [$symbol($version)]($style)'

[ocaml]
format = ' [$symbol($version)(\($switch_indicator$switch_name\) )]($style)'

[openstack]
format = ' [$symbol$cloud(\($project\))]($style) '

[package]
format = ' [$symbol$version]($style)'

[perl]
format = ' [$symbol($version)]($style)'

[php]
format = ' [$symbol($version)]($style)'

[pulumi]
format = ' [$symbol($version)]($style)'

[purescript]
format = ' [$symbol($version)]($style)'

[python]
format = ' [${pyenv_prefix}$virtualenv](bright-yellow)[:](black)[${version}]($style)'
version_format = '${raw}'
style = 'purple'

[red]
format = ' [$symbol($version)]($style)'

[rlang]
format = ' [$symbol($version)]($style)'

[ruby]
format = ' [$symbol($version)]($style)'

[rust]
format = ' [$symbol($version)]($style)'

[scala]
format = ' [$symbol($version)]($style)'

[singularity]
format = '[$symbol\[$env\]]($style) '

[spack]
format = ' [$symbol$environment]($style)'

[status]
format = ' [$status]($style)'
symbol = ''
success_symbol = ''
style = 'bg:purple fg:white bold'
disabled = false

[sudo]
format = ' [$symbol]($style)'
style = 'fg:white bold bg:red'
symbol = 'root'
disabled = false

[swift]
format = ' [$symbol($version)]($style)'

[terraform]
format = ' [$symbol$workspace]($style)'

[time]
format = '[$time]($style) '

[username]
format = '[$user]($style)[@](black bold)'
style_root = 'bg:red fg:white bold'
style_user = 'yellow'
show_always = true

[vagrant]
format = ' [$symbol($version)]($style)'

[vcsh]
format = ' [$symbol$repo]($style)'

[vlang]
format = ' [$symbol($version)]($style)'

[zig]
format = ' [$symbol($version)]($style)'
